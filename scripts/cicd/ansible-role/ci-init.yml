---

- name: Molecule-lint
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    base_path: "{{ role_dir }}"
    obsolete_files:
      # - molecule/default/converge.yml
      - molecule/default/create.yml
      - molecule/default/destroy.yml
      - molecule/default/molecule.yml
      # - molecule/default/Dockerfile.j2
      # - molecule/default/Dockerfile.centos7.j2
      # - molecule/default/Dockerfile.centos8.j2
      # - molecule/default/Dockerfile.debian10.j2
      # - molecule/default/Dockerfile.debian11.j2
      # - molecule/default/Dockerfile.ubuntu1804.j2
      # - molecule/default/Dockerfile.ubuntu2004.j2
      - molecule/default/INSTALL.rst
      - molecule/default/playbook.yml
      - molecule/default/tests/test_default.pyc
      - molecule/default/tests/test_default.py
      - molecule/default/yaml-lint.yml
      - .ansible
      - .gitlab-ci.yml
      - .github/workflows/.releaserc.yml
      - .molecule-platforms.yml
      - .molecule-platforms-docker.yml
      - .molecule-platforms-hetznercloud.yml
      - .molecule-platforms-podman.yml
      - .molecule-platforms-vagrant.yml
      - molecule/default/molecule.yml.j2
      - molecule/default/molecule.yml.err

    molecule_platforms:
      # - ${MOLECULE_DISTRO:-rockylinux8}
      - rockylinux8
      - debian11
      - ubuntu2004
      - ubuntu2204

  tasks:

    # ---------------------------------------------------------------------
    # Initialize all variables & data structures
    # ---------------------------------------------------------------------

    - name: Show role settings
      ansible.builtin.debug:
        msg:
          role: "{{ role }}"
          role_dir: "{{ base_path }}"

    - name: Load .cicd and .cicd.overwrite files
      ansible.builtin.set_fact:
        cicd_vars: "{{ lookup('file', base_path+'/.cicd') | from_yaml }}"
        cicd_vars_overwrite: "{{ lookup('file', base_path+'/.cicd.overwrite') | from_yaml }}"

    - name: Merge dicts
      ansible.builtin.set_fact:
        cicd: "{{ cicd_vars | combine(cicd_vars_overwrite, recursive=True) }}"

    - name: Define some sub-keys as top-level
      ansible.builtin.set_fact:
        "{{ item }}": "{{ vars['cicd'][item] }}"
      loop:
        - generic
        - dependencies
        - platforms
        - platforms_overwrite
        - galaxy
        - github
        - gitlab
        - ado
        - molecule
        - ci_templates
        - ansible_lint

    - name: Create empty roles file
      ansible.builtin.copy:
        content: |
          ---
          roles: []
        dest: "{{ base_path }}/.roles"
        force: false
        mode: "0644"

    - name: Create empty collections file
      ansible.builtin.copy:
        content: |
          ---
          collections:
            - community.general
        dest: "{{ base_path }}/.collections"
        force: false
        mode: "0644"

    - name: Merge platforms with platforms_overwrite
      ansible.builtin.set_fact:
        platforms: "{{ platforms|combine(platforms_overwrite, recursive=True) }}"

    - name: Read extra dependencies from file
      ansible.builtin.set_fact:
        dep_roles: "{{ lookup('file', base_path+'/.roles') | from_yaml | json_query('roles') }}"
        dep_collections: "{{ lookup('file', base_path+'/.collections') | from_yaml | json_query('collections') }}"

    - name: Define dependencies
      ansible.builtin.set_fact:
        dependencies:
          roles: "{{ (dependencies.roles | default([])) + dep_roles | unique }}"
          collections: "{{ (dependencies.collections | default([])) + dep_collections | unique }}"

    - name: Define platforms
      ansible.builtin.set_fact:
        platforms: "{{ platforms|combine(platforms_overwrite, recursive=True) }}"


    # ---------------------------------------------------------------------
    # Get plaform data (supported platforms)
    # ---------------------------------------------------------------------

    - name: Get all platforms
      ansible.builtin.set_fact:
        galaxy_platforms: >-
          {{
             platforms
               | dict2items
               | json_query('[?value.supported].value.galaxy.name')
               | unique
          }}

    - name: Get all versions per platform
      ansible.builtin.set_fact:
        "galaxy_versions_{{ item }}": >-
          {{
            platforms
              | dict2items
              | json_query(query1)
              | json_query(query2)
              | unique
          }}
      loop: "{{ galaxy_platforms }}"
      vars:
        query1: "[?value.supported]"
        query2: "[?value.galaxy.name==`{{ item }}`].value.galaxy.version"


    # ---------------------------------------------------------------------
    # Start initialization
    # ---------------------------------------------------------------------

    - name: Test if molecule was already initialized
      ansible.builtin.stat:
        path: "{{ base_path }}/molecule/default/molecule.yml"
      register: _molecule1

    - name: Test if molecule was already initialized (1)
      ansible.builtin.stat:
        path: "{{ base_path }}/molecule/default/molecule.yml.j2"
      register: _molecule2

    - name: Test if molecule was already initialized (2)
      ansible.builtin.stat:
        path: "{{ base_path }}/molecule/default/molecule-docker.yml.j2"
      register: _molecule3

    - name: Delete molecule.yml if molecule(-docker).yml.j2 exists
      ansible.builtin.file:
        path: "{{ _molecule1.stat.path }}"
      when: _molecule1.stat.exists and (_molecule2.stat.exists or _molecule3.stat.exists)

    - name: Execute 'molecule init'
      # command: molecule init scenario --role-name {{ role }}
      ansible.builtin.command: molecule init scenario
      args:
        chdir: "{{ base_path }}"
      changed_when: yes
      when: not _molecule1.stat.exists and not _molecule2.stat.exists and not _molecule3.stat.exists

    - name: Create all directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ base_path }}/meta"
        - "{{ base_path }}/.github"
        - "{{ base_path }}/.github/workflows"

    - name: Set some helper vars
      ansible.builtin.set_fact:
        github_active: "{{ github.active | default(False) }}"
        github_self_hosted: "{{ github.self_hosted | default(False) }}"
        github_runner_cloud: "{{ true if (github.active|bool and not github.self_hosted|bool) else false }}"
        github_runner_self_hosted: "{{ true if (github.active|bool and github.self_hosted|bool) else false }}"
        gitlab_active: "{{ gitlab.active | default(False) }}"
        ado_active: "{{ ado.active | default(False) }}"
        molecule_active: "{{ molecule.active }}"

    - name: Display helper vars
      ansible.builtin.debug:
        msg:
          github_self_hosted: "{{ github_self_hosted }}"
          github_runner_cloud: "{{ github_runner_cloud }}"
          github_runner_self_hosted: "{{ github_runner_self_hosted }}"
          github_active: "{{ github_active }}"
          gitlab_active: "{{ gitlab_active }}"
          ado_active: "{{ ado_active }}"
          molecule_active: "{{ molecule_active }}"

    - name: Search for files files we do not want
      ansible.builtin.stat:
        path: "{{ base_path }}/{{ item.path }}"
      register: __file2delete
      loop:
        - { path: 'molecule/default/verify.yml', checksum: 'ef3e63272747f36fea099c54df875ddcf4436648' }
        - { path: 'molecule/default/verify.yml', checksum: '3024ce249555474601f1e210bcce4d36f5512e82' }
      loop_control:
        label: "{{ item.path }}"

    - name: Delete those file found and meet-up to the checksum
      ansible.builtin.file:
        path: "{{ base_path }}/{{ item.item.path }}"
        state: absent
      when: item.stat.checksum is defined and item.item.checksum == item.stat.checksum
      loop: "{{ __file2delete.results }}"
      loop_control:
        label: "{{ item.item.path }}"

    - name: Distribute all templates (nested jinja)
      ansible.builtin.template:
        src: "{{ item.value.src }}.j2"
        dest: "{{ base_path }}/{{ item.value.dest }}"
        force: "{{ item.value.force | default(omit) }}"
        variable_start_string: "<="
        variable_end_string: "=>"
        block_start_string: "<%"
        block_end_string: "%>"
        mode: "0644"
      when: item.value.when is undefined or vars[item.value.when]|bool
      loop: "{{ cicd.ci_templates|dict2items }}"

    - name: Delete all files no longer needed
      ansible.builtin.file:
        path: "{{ base_path }}/{{ item }}"
        state: absent
      loop: "{{ obsolete_files }}"

    - name: Add file to discard to .gitignore
      ansible.builtin.lineinfile:
        path: "{{ base_path }}/.gitignore"
        line: "{{ item }}"
      loop:
        # - molecule/default/molecule.yml
        - 'defaults/defaults-*'
