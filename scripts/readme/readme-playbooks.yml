---

- name: README playbooks
  hosts: localhost
  connection: local
  gather_facts: true
#  vars_files:
#    - "{{ working_dir }}/.cicd"
  vars:
    bindir: "{{ lookup('env', 'BINDIR') }}"
    tmpdir: "{{ lookup('env', 'TMPDIR') }}"
    github_owner: de-it-krachten
    github_repo: "{{ name }}"
    readme_file: README.md
    md_template1: README-playbook.md.j2
    tasklists: {}

    defaults: "{{ working_dir + '/defaults/main.yml' }}"

  tasks:

    - name: Show vars
      ansible.builtin.debug:
        msg:
          tmpdir: "{{ tmpdir }}"
          working_dir: "{{ working_dir }}"

    - name: Load .cicd and .cicd.overwrite files
      ansible.builtin.set_fact:
        cicd_vars: "{{ lookup('file', working_dir+'/.cicd') | from_yaml }}"
        cicd_vars_overwrite: "{{ lookup('file', working_dir+'/.cicd.overwrite') | from_yaml }}"

    - name: Merge dicts
      ansible.builtin.set_fact:
        cicd: "{{ cicd_vars | combine(cicd_vars_overwrite, recursive=True) }}"

    - name: Define some sub-keys as top-level
      ansible.builtin.set_fact:
        "{{ item }}": "{{ vars['cicd'][item] }}"
      when: cicd[item] is defined
      loop:
        - generic
        - dependencies
        - platforms
        - platforms_overwrite
        - galaxy
        - github
        - gitlab
        - molecule
        - ci_templates
        - tasklists

    - name: Get all external roles
      ansible.builtin.command:
        cmd: "{{ bindir }}/ansible-galaxy.sh"
      args:
        chdir: "{{ working_dir }}"
      changed_when: true

    - name: Create empty roles file
      ansible.builtin.copy:
        content: |
          ---
          roles: []
        dest: "{{ working_dir }}/.roles"
        force: false
        mode: "0644"

    - name: Create empty collections file
      ansible.builtin.copy:
        content: |
          ---
          collections:
            - community.general
        dest: "{{ working_dir }}/.collections"
        force: false
        mode: "0644"

    - name: Merge platforms with platforms_overwrite
      ansible.builtin.set_fact:
        platforms: "{{ platforms|combine(platforms_overwrite, recursive=True) }}"

    - name: Get all colllection & role dependency files
      ansible.builtin.set_fact:
        collection_files: >-
          [
            {%- for item in lookup('filetree', working_dir, wantlist=True) -%}
            {%- if item.path is search('/.collections$') -%}
            "{{ item.path }}",
            {%- endif -%}
            {%- endfor -%}
          ]
        roles_files: >-
          [
            {%- for item in lookup('filetree', working_dir, wantlist=True) -%}
            {%- if item.path is search('/.roles$') -%}
            "{{ item.path }}",
            {%- endif -%}
            {%- endfor -%}
          ]

    - name: Create list of collections
      ansible.builtin.set_fact:
        dep_collections: "{{ dep_collections | default([]) + lookup('file', working_dir + '/' + item) | from_yaml | json_query('collections[].name') }}"
      loop: "{{ collection_files }}"

    - name: Create list of roles
      ansible.builtin.set_fact:
        dep_roles: "{{ dep_roles | default([]) + lookup('file', working_dir + '/' + item) | from_yaml | json_query('roles[].name') }}"
      loop: "{{ roles_files }}"

    - name: Define dependencies
      ansible.builtin.set_fact:
        dependencies:
          roles: "{{ (dependencies.roles | default([])) + dep_roles | sort | unique }}"
          collections: "{{ (dependencies.collections | default([])) + dep_collections | sort | unique }}"

#    - name: Create directories beneath $TMPDIR
#      file:
#        path: "{{ tmpdir }}/{{ item }}"
#        state: directory
#        mode: "0700"
#      loop:
#        - defaults
#        - vars
#        - molecule/default
#
#    - name: Get all variable files below defaults + vars
#      find:
#        paths:
#          - "{{ working_dir }}/defaults"
#          - "{{ working_dir }}/vars"
#        patterns: "*.yml"
#        follow: true
#        file_type: any
#      register: _varfiles
#
#    - name: Copy all variable files into $TMPDIR
#      copy:
#        src: "{{ item.path }}"
#        dest: "{{ tmpdir }}/{{ item.path | dirname | basename }}/{{ item.path | basename }}"
#        remote_src: true
#      loop: "{{ _varfiles.files }}"
#      loop_control:
#        label: "{{ item.path }}"
#
#    - name: Strip all variable files
#      shell: |
#        varfile={{ tmpdir }}/{{ item.path | dirname | basename }}/{{ item.path | basename }}
#        sed -i "/^---$/d" $varfile
#        sed -i -n '/./,$p' $varfile
#      loop: "{{ _varfiles.files }}"
#      loop_control:
#        label: "{{ item.path }}"
#
#    - name: molecule/defaults/converge.yml | create temporary file and remove unwanted lines
#      shell: |
#        converge_file={{ tmpdir }}/molecule/default/converge.yml
#        cp {{ working_dir }}/molecule/default/converge.yml $converge_file
#        sed -i "s/name: Converge/name: sample playbook for role '{{ generic.playbook_short }}'/" $converge_file
#        sed -i "/^---$/d" $converge_file
#        sed -i "s/ansible-role-//" $converge_file
#        sed -i -n '/./,$p' $converge_file
#
#    - name: Get list of all vars files
#      set_fact:
#        varsfiles: "{{ lookup('fileglob', tmpdir+'/vars/*.yml', wantlist=True) | sort }}"
#
#    - name: Get list of all platform specific defaults
#      set_fact:
#        defaultsfiles: "{{ lookup('fileglob', tmpdir+'/defaults/*.yml', wantlist=True) | sort }}"

    # basic README w/out task lists
    - name: Create README.md from template '{{ md_template1 }}' (w/out taskslists)  # noqa name[template]
      ansible.builtin.template:
        src: "{{ md_template1 }}"
        dest: "{{ working_dir }}/{{ readme_file }}"
        mode: "0644"

    - name: Cleanup external roles
      ansible.builtin.command:
        cmd: "{{ bindir }}/ansible-galaxy.sh -c"
      args:
        chdir: "{{ working_dir }}"
      changed_when: true

#    # basic README w/ task lists
#    - block:
#
#        - name: Create documentation on all tasklists
#          include_tasks: tasklist.yml
#          loop: "{{ tasklists|dict2items }}"
#          loop_control:
#            loop_var: tasklist
#
#        - name: Create README.md from template '{{ md_template2 }}' (w/ taskslists)
#          template:
#            src: "{{ md_template2 }}"
#            dest: "{{ working_dir }}/{{ readme_file }}"
#
#      when: tasklists is defined and tasklists|length > 0
#
#    - name: Restore all temporary stuff
#      include_tasks: replace.yml
#      vars:
#        filepath: "{{ working_dir }}/{{ readme_file }}"
#
#    - name: Create md file per tasklist
#      template:
#        src: "{{ md_template3 }}"
#        dest: "{{ working_dir }}/{{ tasklist['key'] }}.md"
#      loop: "{{ tasklists|dict2items }}"
#      loop_control:
#        loop_var: tasklist
#      when: tasklists is defined
